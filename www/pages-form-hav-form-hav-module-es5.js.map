{"version":3,"sources":["webpack:///src/app/pages/form-hav/form-hav.page.html","webpack:///src/app/pages/form-hav/form-hav.page.ts","webpack:///src/app/pages/form-hav/form-hav.module.ts","webpack:///src/app/pages/form-hav/form-hav-routing.module.ts","webpack:///src/app/pages/form-hav/form-hav.page.scss"],"names":["FormHavPage","navCtrl","modalController","route","observablesService","sharedDataService","apiService","accountService","screenOrientation","ngZone","utilService","UtilService","EnumService","isSubmitted","errorMessage","isShowOritationPortrait","formBuilderDetail","JSON","parse","currentExposure","questionElementIds","setupDynamicChoiceList","listType","list","sections","map","section","key","isHAVSection","setupDynamicChoiceListForSection","sectionIndex","questions","question","questionIndex","questionDisplayOrder","HavFormFieldOrder","Manufacturer","answerChoiceAttributes","listValueKey","listLabelKey","Type","Model","controlName","FCUniqueName","control","formGroup","controls","setValue","handleOrientation","dedicatedMode","type","includes","unlock","isLocalHost","lock","ORIENTATIONS","PORTRAIT","screenOrientationSubscribe","onChange","subscribe","run","user","userValue","formBuilderDetails","companyId","dedicatedModeDeviceDetailData","companyID","modelControlName","selectedAnswerTypeId","CustomAnswerType","TimeField","plannedTimeControlName","questionElementIdsUpdate","addFormControlsForVisibleFields","presentLoadingWithOptions","getManufacturerList","response","hideLoading","toolManufacturers","Result","error","getUserTotalHAVExposureForToday","userId","dedicatedModeUserDetail","StatusCode","ApiResponseCode","RequestSuccessful","formattedNumberToNumber","manufacturer","getTypeList","toolTypes","getModelList","toolModels","value","LANDSCAPE","unsubscribe","valid","toolModel","model","item","havModelID","vibrationValue","kFactor","vibrationMagnitude","exposure","plannedTime","plannedTimeOfUse","pointsPerHour","calculatePointsPerHour","calcualtedExposure","Math","ceil","create","component","swipeToClose","showBackdrop","backdropDismiss","animated","componentProps","modal","present","onWillDismiss","then","data","onBack","viewFormFor","ViewFormForType","Induction","navigateBack","back","havExposure","exposurePoints","hAVExposureId","initialExposure","totalExposure","plannedTimeControl","calculateExposure","saveFormAnswers","status","result","selector","template","FormHavPageModule","imports","declarations","routes","path","FormHavPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-form-hav-form-hav-module-es5.js","sourcesContent":["export default \"<app-portrait-orientation *ngIf=\\\"isShowOritationPortrait;else formView\\\"\\n                          (close)=\\\"isShowOritationPortrait=false\\\"></app-portrait-orientation>\\n\\n<ng-template #formView>\\n\\n    <ion-header mode=\\\"ios\\\" *ngIf=\\\"formBuilderDetail\\\">\\n        <app-modal-header *ngIf=\\\"!sharedDataService.dedicatedMode\\\" [modalTitle]=\\\"formBuilderDetail?.title\\\"\\n                          (closeModal)=\\\"onClose()\\\"></app-modal-header>\\n\\n        <app-modal-header-dm *ngIf=\\\"sharedDataService.dedicatedMode\\\"\\n                             [modalTitle]=\\\"sharedDataService.getCurrentCheckedInEntityName()\\\" (closeModal)=\\\"onClose()\\\"\\n                             [modalSubTitle]=\\\"formBuilderDetail?.title\\\"></app-modal-header-dm>\\n    </ion-header>\\n\\n\\n    <ion-content mode=\\\"md\\\" [ngClass]=\\\"{'dedicated-mode':sharedDataService.dedicatedMode}\\\">\\n        <div class=\\\"content-container\\\">\\n\\n\\n            <app-warning-component *ngIf=\\\"errorMessage && errorMessage.length>0\\\"\\n                                   [message]=\\\"errorMessage\\\"></app-warning-component>\\n\\n            <app-exposure label=\\\"Your Current Exposure\\\" [points]=\\\"currentExposure\\\"\\n                          containerClassName=\\\"top\\\"></app-exposure>\\n\\n            <Form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                <ion-list lines=\\\"none\\\" mode=\\\"ios\\\"\\n                          *ngFor=\\\"let section of formBuilderDetail?.sections; let sectionIndex = index\\\">\\n                    <ng-container *ngIf=\\\"utilService.shouldShowSection(section)\\\">\\n\\n\\n                        <app-section-title\\n                                [title]=\\\"UtilService.findObj(section.sectionTranslations, 'sectionTranslationLanguageId', sharedDataService.getLanguageIdForForm()).sectionTranslationTitle\\\">\\n                        </app-section-title>\\n\\n                        <ng-container *ngIf=\\\"section.isHAVSection; else customQuestions\\\">\\n                            <ng-container *ngFor=\\\"let question of section.questions;let questionIndex = index\\\">\\n\\n                                <ng-container *ngIf=\\\"utilService.shouldShowQuestion(question)\\\">\\n\\n                                    <app-date-field\\n                                            *ngIf=\\\"question.selectedAnswerTypeId === EnumService.CustomAnswerType.DateField\\\"\\n                                            [form]=\\\"formGroup\\\"\\n                                            [inputName]=\\\"UtilService.FCUniqueName(section, question)\\\"\\n                                            [label]=\\\"UtilService.findObj(question.questionTranslations, 'questionTranslationLanguageId', sharedDataService.getLanguageIdForForm()).questionTranslationTitle\\\"\\n                                            [isError]=\\\"isError(section, question)\\\"\\n                                            placeholder=\\\"Choose\\\"\\n                                    ></app-date-field>\\n\\n                                    <app-dropdown-field\\n                                            *ngIf=\\\"question.selectedAnswerTypeId === EnumService.CustomAnswerType.ClassicDropdown\\\"\\n                                            [form]=\\\"formGroup\\\"\\n                                            [inputName]=\\\"UtilService.FCUniqueName(section, question)\\\"\\n                                            [label]=\\\"UtilService.findObj(question.questionTranslations, 'questionTranslationLanguageId', sharedDataService.getLanguageIdForForm()).questionTranslationTitle\\\"\\n                                            [isError]=\\\"isError(section, question)\\\"\\n                                            [list]=\\\"question.answerChoiceAttributes\\\"\\n                                            [listLabelKey]=\\\"question.listLabelKey\\\"\\n                                            [listValueKey]=\\\"question.listValueKey\\\"\\n                                            (valueChange)=\\\"dropDownChange(section, question, sectionIndex,questionIndex)\\\"\\n                                            placeholder=\\\"Choose\\\"\\n                                    ></app-dropdown-field>\\n\\n\\n                                    <app-number-integer-field\\n                                            *ngIf=\\\"question.selectedAnswerTypeId === EnumService.CustomAnswerType.TimeField\\\"\\n                                            [form]=\\\"formGroup\\\"\\n                                            [inputName]=\\\"UtilService.FCUniqueName(section, question)\\\"\\n                                            [label]=\\\"UtilService.findObj(question.questionTranslations, 'questionTranslationLanguageId', sharedDataService.getLanguageIdForForm()).questionTranslationTitle\\\"\\n                                            [isError]=\\\"isError(section,question)\\\"\\n                                    ></app-number-integer-field>\\n                                </ng-container>\\n                            </ng-container>\\n\\n\\n                            <app-exposure label=\\\"Calculated Exposure\\\" [points]=\\\"calculateExposure()\\\"\\n                                          containerClassName=\\\"bottom\\\"></app-exposure>\\n                            <app-exposure label=\\\"Total Exposure Will Be\\\"\\n                                          [points]=\\\"calculateExposure(currentExposure)\\\"></app-exposure>\\n\\n                        </ng-container>\\n\\n                        <ng-template #customQuestions>\\n                            <app-custom-questions-container\\n                                    [sectionIndex]=\\\"sectionIndex\\\"\\n                                    [sectionId]=\\\"section.sectionId\\\"\\n                                    [questions]=\\\"section.questions\\\"\\n                                    [isSubmitted]=\\\"isSubmitted\\\"\\n                                    [formGroup]=\\\"formGroup\\\"\\n                                    [questionElementIds]=\\\"questionElementIds\\\"\\n                                    [section]=\\\"section\\\"\\n                            ></app-custom-questions-container>\\n                        </ng-template>\\n                    </ng-container>\\n                </ion-list>\\n\\n\\n                <!--        End of form -->\\n                <ng-container *ngIf=\\\"!sharedDataService.dedicatedMode\\\">\\n\\n                    <div class=\\\"hr-line-full ion-margin-top\\\"></div>\\n\\n                    <ion-item class=\\\"ion-margin-vertical text-bottom-msg\\\">\\n                        <ion-label class=\\\"ion-text-wrap ion-text-center\\\">\\n                            You've reached the end of the form.\\n                            Please check your answers and sign-off.\\n                        </ion-label>\\n                    </ion-item>\\n\\n                    <ion-item class=\\\"ion-margin-vertical ion-padding-bottom\\\">\\n                        <ion-button type=\\\"submit\\\" expand=\\\"full\\\" class=\\\"action-btn\\\">Sign-Off</ion-button>\\n                    </ion-item>\\n\\n                </ng-container>\\n\\n            </Form>\\n            <div class=\\\"fill-vertical-space\\\"></div>\\n\\n            <!--        End of form -->\\n            <ng-container *ngIf=\\\"sharedDataService.dedicatedMode\\\">\\n                <ion-item class=\\\"text-bottom-msg\\\" lines=\\\"none\\\">\\n                    <ion-label class=\\\"ion-text-wrap ion-padding\\\">\\n                        You've reached the end of the form.\\n                        Please check your answers and sign-off.\\n                    </ion-label>\\n                    <ion-button slot=\\\"end\\\" class=\\\"action-btn\\\" (click)=\\\"onSubmit()\\\">Sign-Off</ion-button>\\n                </ion-item>\\n            </ng-container>\\n        </div>\\n\\n    </ion-content>\\n</ng-template>\\n\";","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ModalController, NavController } from \"@ionic/angular\";\nimport { DemoDataService } from \"../../services/demo-data.service\";\nimport { ExitConfirmationPage } from \"../../modals/exit-confirmation/exit-confirmation.page\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { EnumService } from \"../../services/enum.service\";\nimport { ObservablesService } from \"../../services/observables.service\";\nimport { Subscription } from \"rxjs\";\nimport { SharedDataService } from \"../../services/shared-data.service\";\nimport { ScreenOrientation } from \"@ionic-native/screen-orientation/ngx\";\nimport { UtilService } from \"../../services/util.service\";\nimport { ApiService } from \"../../services/api.service\";\nimport { AccountService } from \"../../services/account.service\";\nimport { Response, User } from \"../../_models\";\nimport { HavManufacturerItem } from \"../../_models/havManufacturerItem\";\nimport { HavTypeItem } from \"../../_models/havTypeItem\";\nimport { HavModelItem } from \"../../_models/havModelItem\";\nimport { FormAnswerObject } from \"../../_models/formAnswerObject\";\nimport { HavAnswerObject } from \"../../_models/havAnswerObject\";\nimport { HavExposure } from \"../../_models/havExposure\";\nimport { SubmitAnswersObject } from \"../../_models/submitAnswersObject\";\nimport { ValidatorService } from \"../../services/validator.service\";\n\n@Component({\n  selector: \"app-form-hav\",\n  templateUrl: \"./form-hav.page.html\",\n  styleUrls: [\"./form-hav.page.scss\"],\n})\nexport class FormHavPage implements OnInit {\n  UtilService = UtilService;\n  EnumService = EnumService;\n  user: User;\n\n  isSubmitted = false;\n  formGroup: FormGroup;\n  errorMessage = \"\";\n\n  toolModels: Array<HavModelItem>;\n\n  screenOrientationSubscribe;\n  isShowOritationPortrait = false;\n\n  formBuilderDetail = JSON.parse(\n    '{\"formId\":111,\"title\":\"Hav Form Test 1\",\"description\":null,\"formVersionId\":176,\"formVersionNo\":7,\"isDraft\":false,\"formTypeID\":4,\"companyId\":27,\"defaultLanguageId\":0,\"sections\":[{\"sectionId\":171,\"sectionIsHidden\":false,\"sectionDisplayOrder\":1,\"isRiskAssessmentSection\":false,\"isHAVSection\":true,\"isAccidentReportSection\":false,\"sectionTranslations\":[{\"sectionTranslationId\":274,\"sectionTranslationLanguageId\":35,\"sectionTranslationTitle\":\"HAVs Assessment\"}],\"questions\":[{\"questionId\":364,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":7,\"questionDisplayOrder\":1,\"sectionID\":171,\"questionTranslations\":[{\"questionTranslationId\":442,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Date of Usage\",\"questionTranslationInstructionOrNote\":null,\"questionTranslationTextLabel\":null}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":365,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":11,\"questionDisplayOrder\":2,\"sectionID\":171,\"questionTranslations\":[{\"questionTranslationId\":443,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Manufacturer\",\"questionTranslationInstructionOrNote\":null,\"questionTranslationTextLabel\":null}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":366,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":11,\"questionDisplayOrder\":3,\"sectionID\":171,\"questionTranslations\":[{\"questionTranslationId\":444,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Type\",\"questionTranslationInstructionOrNote\":null,\"questionTranslationTextLabel\":null}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":367,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":11,\"questionDisplayOrder\":4,\"sectionID\":171,\"questionTranslations\":[{\"questionTranslationId\":445,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Model\",\"questionTranslationInstructionOrNote\":null,\"questionTranslationTextLabel\":null}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":368,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":8,\"questionDisplayOrder\":5,\"sectionID\":171,\"questionTranslations\":[{\"questionTranslationId\":446,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Planned Time of Use (in minutes)\",\"questionTranslationInstructionOrNote\":null,\"questionTranslationTextLabel\":null}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]}],\"tasks\":[]},{\"sectionId\":172,\"sectionIsHidden\":false,\"sectionDisplayOrder\":2,\"isRiskAssessmentSection\":false,\"isHAVSection\":false,\"isAccidentReportSection\":false,\"sectionTranslations\":[{\"sectionTranslationId\":275,\"sectionTranslationLanguageId\":35,\"sectionTranslationTitle\":\"section 2\"}],\"questions\":[{\"questionId\":369,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":true,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":1,\"questionDisplayOrder\":1,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":447,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Single choice question\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[{\"answerChoiceAttributeId\":389,\"answerChoiceAttributeText\":null,\"answerChoiceAttributeColor\":\"white\",\"answerChoiceAttributeScoreOrWeight\":1,\"answerChoiceAttributeHeaders\":[{\"answerChoiceAttributeHeaderId\":508,\"answerChoiceAttributeHeaderLanguageId\":35,\"answerChoiceAttributeHeaderTitle\":\"correct\"}]},{\"answerChoiceAttributeId\":390,\"answerChoiceAttributeText\":null,\"answerChoiceAttributeColor\":\"white\",\"answerChoiceAttributeScoreOrWeight\":0,\"answerChoiceAttributeHeaders\":[{\"answerChoiceAttributeHeaderId\":509,\"answerChoiceAttributeHeaderLanguageId\":35,\"answerChoiceAttributeHeaderTitle\":\"wrong\"}]}],\"questionLogics\":[],\"questionAttachments\":[{\"questionAttachmentId\":29,\"isExistingFile\":false,\"shouldSaveFileToPlatform\":false,\"fileName\":\"demo51.png\",\"fileType\":null,\"fileExtension\":\"png\",\"folderName\":\"Choose\",\"questionID\":369,\"documentID\":125,\"folderID\":null}]},{\"questionId\":370,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":2,\"questionDisplayOrder\":2,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":448,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Multi choice question\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[{\"answerChoiceAttributeId\":391,\"answerChoiceAttributeText\":null,\"answerChoiceAttributeColor\":\"yellow\",\"answerChoiceAttributeScoreOrWeight\":3,\"answerChoiceAttributeHeaders\":[{\"answerChoiceAttributeHeaderId\":510,\"answerChoiceAttributeHeaderLanguageId\":35,\"answerChoiceAttributeHeaderTitle\":\"correct\"}]},{\"answerChoiceAttributeId\":392,\"answerChoiceAttributeText\":null,\"answerChoiceAttributeColor\":\"purple\",\"answerChoiceAttributeScoreOrWeight\":2,\"answerChoiceAttributeHeaders\":[{\"answerChoiceAttributeHeaderId\":511,\"answerChoiceAttributeHeaderLanguageId\":35,\"answerChoiceAttributeHeaderTitle\":\"correct\"}]},{\"answerChoiceAttributeId\":393,\"answerChoiceAttributeText\":null,\"answerChoiceAttributeColor\":\"white\",\"answerChoiceAttributeScoreOrWeight\":1,\"answerChoiceAttributeHeaders\":[{\"answerChoiceAttributeHeaderId\":512,\"answerChoiceAttributeHeaderLanguageId\":35,\"answerChoiceAttributeHeaderTitle\":\"wrong\"}]},{\"answerChoiceAttributeId\":394,\"answerChoiceAttributeText\":null,\"answerChoiceAttributeColor\":\"grey\",\"answerChoiceAttributeScoreOrWeight\":1,\"answerChoiceAttributeHeaders\":[{\"answerChoiceAttributeHeaderId\":513,\"answerChoiceAttributeHeaderLanguageId\":35,\"answerChoiceAttributeHeaderTitle\":\"wrong\"}]}],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":371,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":3,\"questionDisplayOrder\":3,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":449,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Single line text\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":372,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":4,\"questionDisplayOrder\":4,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":450,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Multiline Text\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":373,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":5,\"questionDisplayOrder\":5,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":451,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Number Field Integer\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":374,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":6,\"questionDisplayOrder\":6,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":452,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Number Field Decimal\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":375,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":7,\"questionDisplayOrder\":7,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":453,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Date Field\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":376,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":9,\"questionDisplayOrder\":8,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":454,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Date and Time Field\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":377,\"questionIsHidden\":false,\"questionIsRequired\":true,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":8,\"questionDisplayOrder\":9,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":455,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Time Field\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]},{\"questionId\":378,\"questionIsHidden\":false,\"questionIsRequired\":false,\"allowInstructionOrNote\":false,\"allowTextLabel\":false,\"shouldShowOptionalComment\":false,\"allowAttachment\":false,\"allowQuestionLogic\":false,\"isExistingFile\":false,\"shouldShowAnswerChoiceTemplate\":false,\"selectedAnswerTypeId\":10,\"questionDisplayOrder\":10,\"sectionID\":172,\"questionTranslations\":[{\"questionTranslationId\":456,\"questionTranslationLanguageId\":35,\"questionTranslationTitle\":\"Photo Upload\",\"questionTranslationInstructionOrNote\":\"\",\"questionTranslationTextLabel\":\"\"}],\"answerChoiceAttributes\":[],\"questionLogics\":[],\"questionAttachments\":[]}],\"tasks\":[]}],\"selectedLanguage\":null,\"selectedLanguages\":[{\"languageId\":35,\"languageLabel\":\"English\"}],\"supportedLanguages\":[],\"answerTypes\":[],\"answerChoiceColors\":null,\"hourFormats\":null,\"questionActionOnList\":null,\"questionActionTypes\":null,\"questionChoiceSetTypes\":null,\"questionOperatorTypes\":null,\"userList\":null,\"groupList\":null,\"workPermitDetails\":{\"workPermitId\":0,\"totalScore\":null,\"hasExpirationDate\":false,\"hasExpiresOn\":false,\"expiresOnDate\":null,\"hasExpiresAfter\":false,\"durationValue\":null,\"hasPermitIssuedNotification\":false,\"hasPermitNotIssuedNotification\":false,\"operatorTypeID\":null,\"durationTypeID\":null,\"permitIssuedNotificationID\":null,\"permitNotIssuedNotificationID\":null,\"formVersionID\":0,\"permitNotIssuedNotification\":{\"notifyUser\":true,\"selectedUserId\":\"00000000-0000-0000-0000-000000000000\",\"selectedUsers\":[],\"notifyGroup\":false,\"selectedGroupId\":0,\"selectedGroups\":[],\"isSystemNotification\":true,\"isEmailNotification\":false,\"isSMSNotification\":false,\"selectedUsersAndGroups\":[]},\"permitIssuedNotification\":{\"notifyUser\":true,\"selectedUserId\":\"00000000-0000-0000-0000-000000000000\",\"selectedUsers\":[],\"notifyGroup\":false,\"selectedGroupId\":0,\"selectedGroups\":[],\"isSystemNotification\":true,\"isEmailNotification\":false,\"isSMSNotification\":false,\"selectedUsersAndGroups\":[]}},\"accidentReport\":{\"accidentReportId\":0,\"hasAccidentNotification\":false,\"notificationID\":null,\"formVersionID\":0,\"accidentNotification\":{\"notifyUser\":true,\"selectedUserId\":\"00000000-0000-0000-0000-000000000000\",\"selectedUsers\":[],\"notifyGroup\":false,\"selectedGroupId\":0,\"selectedGroups\":[],\"isSystemNotification\":true,\"isEmailNotification\":false,\"isSMSNotification\":false,\"selectedUsersAndGroups\":[]}},\"modifiedBy\":\"00000000-0000-0000-0000-000000000000\",\"folderDocumentList\":null,\"folderDocumentTreeList\":null,\"signedUsers\":[],\"taskTemplates\":[]}'\n  );\n  currentExposure = 0;\n\n  plannedTimeControlName;\n  modelControlName;\n\n  questionElementIds = [];\n  companyId;\n\n  constructor(\n    public navCtrl: NavController,\n    public modalController: ModalController,\n    public route: ActivatedRoute,\n    public observablesService: ObservablesService,\n    public sharedDataService: SharedDataService,\n    private apiService: ApiService,\n    public accountService: AccountService,\n    private screenOrientation: ScreenOrientation,\n    private ngZone: NgZone,\n    public utilService: UtilService\n  ) {\n    this.user = accountService.userValue;\n\n    if (sharedDataService.formBuilderDetails) {\n      this.formBuilderDetail = sharedDataService.formBuilderDetails;\n    }\n\n    if (this.sharedDataService.dedicatedMode) {\n      this.companyId = this.sharedDataService.dedicatedModeDeviceDetailData?.companyID;\n    } else {\n      this.companyId = this.user?.companyID;\n    }\n\n    // Add form controls for each type of fields\n    this.formGroup = new FormGroup({});\n\n    const sections = this.formBuilderDetail.sections;\n    if (sections) {\n      sections.map((section, sectionIndex) => {\n        if (section.isHAVSection) {\n          const questions = section.questions;\n          questions.map((question, questionIndex) => {\n            if (\n              question.questionDisplayOrder ===\n              EnumService.HavFormFieldOrder.Model\n            ) {\n              this.modelControlName = UtilService.FCUniqueName(\n                section,\n                question\n              );\n            }\n\n            if (\n              question.selectedAnswerTypeId ===\n              EnumService.CustomAnswerType.TimeField\n            ) {\n              this.plannedTimeControlName = UtilService.FCUniqueName(\n                section,\n                question\n              );\n            }\n          });\n        }\n      });\n    }\n    this.utilService.questionElementIdsUpdate = (questionElementIds) => {\n      this.questionElementIds = questionElementIds;\n    };\n    this.utilService.addFormControlsForVisibleFields(sections, this.formGroup);\n    // -- End -- Add form controls for each type of fields\n  }\n\n  async ngOnInit() {\n    this.utilService.presentLoadingWithOptions();\n\n    this.apiService.getManufacturerList(this.companyId).subscribe(\n      (response: Response) => {\n        this.utilService.hideLoading();\n        const toolManufacturers = response.Result;\n        this.setupDynamicChoiceList(\n          EnumService.HavFormFieldOrder.Manufacturer,\n          toolManufacturers\n        );\n      },\n      (error) => {\n        this.utilService.hideLoading();\n      }\n    );\n\n    this.getUserTotalHAVExposureForToday();\n  }\n\n  getUserTotalHAVExposureForToday() {\n    let userId = this.user?.userId;\n    if (this.sharedDataService.dedicatedMode) {\n      userId = this.sharedDataService.dedicatedModeUserDetail?.userId;\n    }\n    this.apiService\n      .getUserTotalHAVExposureForToday(userId)\n      .subscribe((response: Response) => {\n        if (\n          response.StatusCode === EnumService.ApiResponseCode.RequestSuccessful\n        ) {\n          this.currentExposure = UtilService.formattedNumberToNumber(\n            response.Result\n          );\n        }\n      });\n  }\n\n  setupDynamicChoiceList = (listType, list) => {\n    const sections = this.formBuilderDetail.sections;\n    if (sections) {\n      sections.map((section, key) => {\n        if (section.isHAVSection) {\n          this.setupDynamicChoiceListForSection(key, listType, list);\n        }\n      });\n    }\n  };\n\n  setupDynamicChoiceListForSection = (sectionIndex, listType, list) => {\n    const sections = this.formBuilderDetail.sections;\n    if (sections) {\n      const section = sections[sectionIndex];\n\n      const questions = section.questions;\n      questions.map((question, questionIndex) => {\n        if (question.questionDisplayOrder === listType) {\n          if (\n            question.questionDisplayOrder ===\n            EnumService.HavFormFieldOrder.Manufacturer\n          ) {\n            question.answerChoiceAttributes = list;\n            question.listValueKey = \"havManufacturerID\";\n            question.listLabelKey = \"havManufacturerName\";\n          } else if (\n            question.questionDisplayOrder === EnumService.HavFormFieldOrder.Type\n          ) {\n            question.answerChoiceAttributes = list;\n            question.listValueKey = \"havTypeID\";\n            question.listLabelKey = \"havTypeName\";\n          } else if (\n            question.questionDisplayOrder ===\n            EnumService.HavFormFieldOrder.Model\n          ) {\n            question.answerChoiceAttributes = list;\n            question.listValueKey = \"havModelID\";\n            question.listLabelKey = \"model\";\n          }\n          const controlName = UtilService.FCUniqueName(section, question);\n          const control = this.formGroup.controls[controlName];\n          control.setValue(\"\");\n        }\n      });\n    }\n  };\n\n  async getTypeList(manufacturer, sectionIndex, questionIndex) {\n    const sections = this.formBuilderDetail.sections;\n    const question = sections[sectionIndex]?.questions[questionIndex];\n    this.setupDynamicChoiceListForSection(\n      sectionIndex,\n      EnumService.HavFormFieldOrder.Type,\n      []\n    );\n    this.setupDynamicChoiceListForSection(\n      sectionIndex,\n      EnumService.HavFormFieldOrder.Model,\n      []\n    );\n\n    this.utilService.presentLoadingWithOptions();\n\n    this.apiService.getTypeList(this.companyId, manufacturer).subscribe(\n      (response: Response) => {\n        this.utilService.hideLoading();\n        const toolTypes = response.Result;\n        this.setupDynamicChoiceListForSection(\n          sectionIndex,\n          EnumService.HavFormFieldOrder.Type,\n          toolTypes\n        );\n        this.setupDynamicChoiceListForSection(\n          sectionIndex,\n          EnumService.HavFormFieldOrder.Model,\n          []\n        );\n      },\n      (error) => {\n        this.utilService.hideLoading();\n      }\n    );\n  }\n\n  async getModelList(type, sectionIndex, questionIndex) {\n    const sections = this.formBuilderDetail.sections;\n    const question = sections[sectionIndex]?.questions[questionIndex];\n    this.setupDynamicChoiceListForSection(\n      sectionIndex,\n      EnumService.HavFormFieldOrder.Model,\n      []\n    );\n\n    this.utilService.presentLoadingWithOptions();\n\n    this.apiService.getModelList(this.companyId, type).subscribe(\n      (response: Response) => {\n        this.utilService.hideLoading();\n        const toolModels = response.Result;\n        this.toolModels = toolModels;\n        this.setupDynamicChoiceListForSection(\n          sectionIndex,\n          EnumService.HavFormFieldOrder.Model,\n          toolModels\n        );\n      },\n      (error) => {\n        this.utilService.hideLoading();\n      }\n    );\n  }\n\n  dropDownChange(section, question, sectionIndex, questionIndex) {\n    const controlName = UtilService.FCUniqueName(section, question);\n    const control = this.formGroup.controls[controlName];\n    if (\n      question.questionDisplayOrder ===\n      EnumService.HavFormFieldOrder.Manufacturer\n    ) {\n      this.getTypeList(control.value, sectionIndex, questionIndex);\n    } else if (\n      question.questionDisplayOrder === EnumService.HavFormFieldOrder.Type\n    ) {\n      this.getModelList(control.value, sectionIndex, questionIndex);\n    }\n  }\n\n  handleOrientation = () => {\n    if (this.sharedDataService.dedicatedMode) {\n      if (this.screenOrientation.type.includes(\"landscape\")) {\n        this.screenOrientation.unlock();\n        this.isShowOritationPortrait = true;\n      } else {\n        if (!UtilService.isLocalHost()) {\n          this.screenOrientation.lock(\n            this.screenOrientation.ORIENTATIONS.PORTRAIT\n          );\n        }\n      }\n\n      this.screenOrientationSubscribe = this.screenOrientation\n        .onChange()\n        .subscribe(() => {\n          this.ngZone.run(() => {\n            if (this.screenOrientation.type.includes(\"portrait\")) {\n              if (!UtilService.isLocalHost()) {\n                this.screenOrientation.lock(\n                  this.screenOrientation.ORIENTATIONS.PORTRAIT\n                );\n              }\n              this.isShowOritationPortrait = false;\n            }\n            if (this.screenOrientation.type.includes(\"landscape\")) {\n              this.isShowOritationPortrait = true;\n            }\n          });\n        });\n    }\n  };\n\n  ionViewWillEnter() {\n    this.handleOrientation();\n  }\n\n  ionViewDidLeave(): void {\n    if (this.sharedDataService.dedicatedMode) {\n      if (!UtilService.isLocalHost()) {\n        this.screenOrientation.lock(\n          this.screenOrientation.ORIENTATIONS.LANDSCAPE\n        );\n        this.screenOrientationSubscribe.unsubscribe();\n      }\n    }\n  }\n\n  isError(section, question) {\n    const controlName = UtilService.FCUniqueName(section, question);\n    return this.isSubmitted && !this.formGroup.controls[controlName].valid;\n  }\n\n  calculatePointsPerHour() {\n    const toolModel = this.formGroup.controls[this.modelControlName];\n    if (toolModel) {\n      let model: HavModelItem;\n      if (this.toolModels) {\n        this.toolModels.map((item) => {\n          if (item.havModelID === toolModel.value) {\n            model = item;\n            return;\n          }\n        });\n      }\n      const vibrationValue = model\n        ? UtilService.formattedNumberToNumber(model.vibrationValue)\n        : 0;\n      const kFactor = model\n        ? UtilService.formattedNumberToNumber(model.kFactor)\n        : 0;\n      const vibrationMagnitude = vibrationValue + kFactor;\n      return vibrationMagnitude * (vibrationMagnitude * 2);\n    }\n    return 0;\n  }\n\n  calculateExposure(exposure = 0) {\n    const plannedTime = this.formGroup.controls[this.plannedTimeControlName];\n    if (plannedTime) {\n      const plannedTimeOfUse = plannedTime.value\n        ? UtilService.formattedNumberToNumber(plannedTime.value)\n        : 0;\n      const pointsPerHour = this.calculatePointsPerHour();\n      const calcualtedExposure = (plannedTimeOfUse / 60) * pointsPerHour;\n      return Math.ceil(calcualtedExposure + exposure);\n    }\n    return Math.ceil(exposure);\n  }\n\n  async onClose() {\n    const modal = await this.modalController.create({\n      component: ExitConfirmationPage,\n      swipeToClose: false,\n      showBackdrop: false,\n      backdropDismiss: false,\n      animated: true,\n      componentProps: {},\n    });\n    await modal.present();\n\n    modal.onWillDismiss().then(({ data }) => {\n      if (data) {\n        this.onBack();\n      }\n    });\n  }\n\n  onBack() {\n    if (\n      this.sharedDataService.viewFormFor ===\n      EnumService.ViewFormForType.Induction\n    ) {\n      this.navCtrl.navigateBack(\"/checkinout-confirm\");\n    } else {\n      this.navCtrl.back();\n    }\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.errorMessage = \"\";\n\n    const havExposure: HavExposure = {\n      vibrationMagnitude: 0,\n      pointsPerHour: 0,\n      exposurePoints: 0,\n      hAVExposureId: 0,\n      initialExposure: 0,\n      totalExposure: 0,\n    };\n    if (this.formGroup.valid) {\n      const plannedTimeControl = this.formGroup.controls[\n        this.plannedTimeControlName\n      ];\n      if (plannedTimeControl.value > 0) {\n        const toolModel = this.formGroup.controls[this.modelControlName];\n        if (toolModel) {\n          let model: HavModelItem;\n          if (this.toolModels) {\n            this.toolModels.map((item) => {\n              if (item.havModelID === toolModel.value) {\n                model = item;\n                return;\n              }\n            });\n          }\n\n          havExposure.vibrationMagnitude = model\n            ? UtilService.formattedNumberToNumber(model.vibrationValue)\n            : 0;\n          havExposure.pointsPerHour = this.calculatePointsPerHour();\n          havExposure.exposurePoints = this.calculateExposure();\n          havExposure.hAVExposureId = 0;\n          havExposure.initialExposure = this.currentExposure;\n          havExposure.totalExposure = this.calculateExposure(\n            this.currentExposure\n          );\n        }\n      } else {\n        this.errorMessage =\n          '\"Planned time of use\" should be greater then zero.';\n        return;\n      }\n    }\n\n    this.sharedDataService.saveFormAnswers(\n      this.apiService,\n      this.formGroup,\n      this.formBuilderDetail,\n      this.user,\n      (status, result) => {\n        if (status) {\n        } else {\n          this.errorMessage = result;\n        }\n      },\n      havExposure\n    );\n  }\n\n  ionViewDidEnter() {}\n\n  ionViewWillLeave(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormHavPageRoutingModule } from './form-hav-routing.module';\n\nimport { FormHavPage } from './form-hav.page';\nimport {ComponentsModule} from '../../components/components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FormHavPageRoutingModule,\n        ComponentsModule,\n        ReactiveFormsModule\n    ],\n  declarations: [FormHavPage]\n})\nexport class FormHavPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormHavPage } from './form-hav.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormHavPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormHavPageRoutingModule {}\n","export default \"ion-content.dedicated-mode {\\n  --background: #F6F9FB;\\n}\\nion-content.dedicated-mode app-exposure::ng-deep .exposure {\\n  background-color: #ffffff;\\n  flex-direction: row;\\n  padding: 10px 20px;\\n  border-radius: 12px;\\n}\\nion-content.dedicated-mode app-exposure::ng-deep .exposure ion-label {\\n  flex: 1;\\n  text-align: left;\\n}\\nion-content.dedicated-mode app-exposure::ng-deep .exposure.top {\\n  width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\nion-content.dedicated-mode app-exposure::ng-deep .exposure.bottom {\\n  background-color: #F6F9FB;\\n  border-radius: 0;\\n  margin: 12px 1px 0;\\n}\\nion-content.dedicated-mode app-exposure::ng-deep .exposure .points {\\n  margin: 8px;\\n}\\nion-content.dedicated-mode ion-list {\\n  width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  border-radius: 12px;\\n}\\nion-content.dedicated-mode .text-bottom-msg {\\n  box-shadow: 0px 0 20px rgba(0, 0, 0, 0.3);\\n  margin-top: 40px;\\n  color: #171538;\\n  padding: 0 16px;\\n  background-color: #ffffff;\\n}\\nion-content.dedicated-mode .text-bottom-msg ion-label {\\n  padding: 16px 0;\\n}\\nion-content.dedicated-mode .text-bottom-msg .action-btn {\\n  width: 200px;\\n  margin: 0;\\n  margin-left: 16px;\\n}\\nion-content .hr-line-full {\\n  width: 100%;\\n  height: 1px;\\n  background-color: rgba(74, 144, 226, 0.2);\\n}\\nion-content app-exposure::ng-deep .points.total {\\n  background: #E74731;\\n  font-family: SF Pro Display;\\n  font-weight: bold;\\n  font-size: 16px;\\n  line-height: 19px;\\n}\\nion-content .text-bottom-msg {\\n  font-family: IBM Plex Sans;\\n  font-style: normal;\\n  font-weight: normal;\\n  font-size: 14px;\\n  line-height: 18px;\\n  text-align: center;\\n  color: #171538;\\n  padding: 16px 32px;\\n}\\nion-content .action-btn {\\n  width: 100%;\\n  margin: 0;\\n  --border-radius: 3px;\\n  border-radius: 3px;\\n  overflow: hidden;\\n}\\nion-content app-number-integer-field::ng-deep .input-item ion-input {\\n  width: 160px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Zvcm0taGF2LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHRTtFQUNFLHFCQUFBO0FBRko7QUFJSTtFQUNFLHlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBRk47QUFJTTtFQUNFLE9BQUE7RUFDQSxnQkFBQTtBQUZSO0FBS007RUFDRSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUhSO0FBTU07RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFKUjtBQU9NO0VBQ0UsV0FBQTtBQUxSO0FBU0k7RUFDRSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBUE47QUFVSTtFQUNFLHlDQUFBO0VBRUEsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0FBVE47QUFXTTtFQUNFLGVBQUE7QUFUUjtBQVlNO0VBQ0UsWUFBQTtFQUNBLFNBQUE7RUFDQSxpQkFBQTtBQVZSO0FBZUU7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLHlDQUFBO0FBYko7QUFrQk07RUFDRSxtQkFBQTtFQUNBLDJCQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFoQlI7QUFxQkU7RUFDRSwwQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQW5CSjtBQXNCRTtFQUNFLFdBQUE7RUFDQSxTQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FBcEJKO0FBeUJNO0VBQ0UsWUFBQTtBQXZCUiIsImZpbGUiOiJmb3JtLWhhdi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkcGFkZGluZ0hvcml6b250YWw6IDIzcHg7XG5cbmlvbi1jb250ZW50IHtcbiAgJi5kZWRpY2F0ZWQtbW9kZSB7XG4gICAgLS1iYWNrZ3JvdW5kOiAjRjZGOUZCO1xuXG4gICAgYXBwLWV4cG9zdXJlOjpuZy1kZWVwIC5leHBvc3VyZXtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcblxuICAgICAgaW9uLWxhYmVsIHtcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIH1cblxuICAgICAgJi50b3Age1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgICAgfVxuXG4gICAgICAmLmJvdHRvbSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGNkY5RkI7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgIG1hcmdpbjogMTJweCAxcHggMDtcbiAgICAgIH1cblxuICAgICAgLnBvaW50cyB7XG4gICAgICAgIG1hcmdpbjogOHB4O1xuICAgICAgfVxuICAgIH1cblxuICAgIGlvbi1saXN0IHtcbiAgICAgIHdpZHRoOiA3MCU7XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgfVxuXG4gICAgLnRleHQtYm90dG9tLW1zZyB7XG4gICAgICBib3gtc2hhZG93OiAwcHggMCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcblxuICAgICAgbWFyZ2luLXRvcDogNDBweDtcbiAgICAgIGNvbG9yOiAjMTcxNTM4O1xuICAgICAgcGFkZGluZzogMCAxNnB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcblxuICAgICAgaW9uLWxhYmVsIHtcbiAgICAgICAgcGFkZGluZzogMTZweCAwO1xuICAgICAgfVxuXG4gICAgICAuYWN0aW9uLWJ0biB7XG4gICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuaHItbGluZS1mdWxsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDc0LCAxNDQsIDIyNiwgMC4yKTtcbiAgfVxuXG4gIGFwcC1leHBvc3VyZTo6bmctZGVlcCB7XG4gICAgLnBvaW50cyB7XG4gICAgICAmLnRvdGFsIHtcbiAgICAgICAgYmFja2dyb3VuZDogI0U3NDczMTtcbiAgICAgICAgZm9udC1mYW1pbHk6IFNGIFBybyBEaXNwbGF5O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAudGV4dC1ib3R0b20tbXNnIHtcbiAgICBmb250LWZhbWlseTogSUJNIFBsZXggU2FucztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjMTcxNTM4O1xuICAgIHBhZGRpbmc6IDE2cHggMzJweDtcbiAgfVxuXG4gIC5hY3Rpb24tYnRuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDA7XG4gICAgLS1ib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICBhcHAtbnVtYmVyLWludGVnZXItZmllbGQ6Om5nLWRlZXAge1xuICAgIC5pbnB1dC1pdGVtIHtcbiAgICAgIGlvbi1pbnB1dCB7XG4gICAgICAgIHdpZHRoOiAxNjBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ== */\";"]}