{"version":3,"sources":["webpack:///src/app/pages/checkin-induction-rich-text/checkin-induction-rich-text.module.ts","webpack:///src/app/pages/checkin-induction-rich-text/checkin-induction-rich-text.page.scss","webpack:///src/app/pages/checkin-induction-rich-text/checkin-induction-rich-text-routing.module.ts","webpack:///src/app/pages/checkin-induction-rich-text/checkin-induction-rich-text.page.ts","webpack:///src/app/pages/checkin-induction-rich-text/checkin-induction-rich-text.page.html"],"names":["CheckinInductionRichTextPageModule","imports","declarations","routes","path","component","CheckinInductionRichTextPageRoutingModule","forChild","exports","CheckinInductionRichTextPage","navCtrl","route","sharedDataService","utilService","accountService","sanitizer","dedicatedMode","user","userValue","queryParams","subscribe","parameters","inductionContentItemIndex","checkInDetail","checkInInductionItems","length","inductionItem","back","navigateRoot","replaceUrl","navigateBack","userId","dedicatedModeUserDetail","inductionNavigationProcess","selector","template"],"mappings":"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","file":"pages-checkin-induction-rich-text-checkin-induction-rich-text-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckinInductionRichTextPageRoutingModule } from './checkin-induction-rich-text-routing.module';\n\nimport { CheckinInductionRichTextPage } from './checkin-induction-rich-text.page';\nimport {ComponentsModule} from '../../components/components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        CheckinInductionRichTextPageRoutingModule,\n        ComponentsModule\n    ],\n  declarations: [CheckinInductionRichTextPage]\n})\nexport class CheckinInductionRichTextPageModule {}\n","export default \"ion-content {\\n  --background: #fff;\\n}\\nion-content.dedicated-mode {\\n  --background: #F6F9FB;\\n}\\nion-content .content {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n}\\nion-content .text-title-1 {\\n  font-family: IBM Plex Sans;\\n  font-style: normal;\\n  font-weight: normal;\\n  font-size: 24px;\\n  line-height: 31px;\\n  text-align: center;\\n  color: #444444;\\n}\\nion-content .text-view {\\n  margin: 5%;\\n  height: auto;\\n  font-family: IBM Plex Sans;\\n  font-style: normal;\\n  font-weight: normal;\\n  font-size: 12px;\\n  line-height: 16px;\\n  color: #171538;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NoZWNraW4taW5kdWN0aW9uLXJpY2gtdGV4dC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtBQUNGO0FBQ0U7RUFDRSxxQkFBQTtBQUNKO0FBRUU7RUFDRSxhQUFBO0VBQ0EsT0FBQTtFQUNBLHNCQUFBO0FBQUo7QUFHRTtFQUNFLDBCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBQURKO0FBSUU7RUFDRSxVQUFBO0VBQ0EsWUFBQTtFQUVBLDBCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7QUFISiIsImZpbGUiOiJjaGVja2luLWluZHVjdGlvbi1yaWNoLXRleHQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6ICNmZmY7XG5cbiAgJi5kZWRpY2F0ZWQtbW9kZSB7XG4gICAgLS1iYWNrZ3JvdW5kOiAjRjZGOUZCO1xuICB9XG5cbiAgLmNvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgLnRleHQtdGl0bGUtMSB7XG4gICAgZm9udC1mYW1pbHk6IElCTSBQbGV4IFNhbnM7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzMXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogIzQ0NDQ0NDtcbiAgfVxuXG4gIC50ZXh0LXZpZXcge1xuICAgIG1hcmdpbjogNSU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuXG4gICAgZm9udC1mYW1pbHk6IElCTSBQbGV4IFNhbnM7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIGNvbG9yOiAjMTcxNTM4O1xuICB9XG59XG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckinInductionRichTextPage } from './checkin-induction-rich-text.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckinInductionRichTextPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckinInductionRichTextPageRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {NavController} from '@ionic/angular';\nimport {DemoDataService} from '../../services/demo-data.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {SharedDataService} from '../../services/shared-data.service';\nimport {InductionItem} from '../../_models/inductionItem';\nimport {UtilService} from '../../services/util.service';\nimport {EnumService} from '../../services/enum.service';\nimport {AccountService} from '../../services/account.service';\nimport {User} from '../../_models';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-checkin-induction-rich-text',\n    templateUrl: './checkin-induction-rich-text.page.html',\n    styleUrls: ['./checkin-induction-rich-text.page.scss'],\n})\nexport class CheckinInductionRichTextPage implements OnInit {\n    user: User;\n\n    inductionItem: InductionItem;\n\n    constructor(\n        public navCtrl: NavController,\n        public route: ActivatedRoute,\n        public sharedDataService: SharedDataService,\n        public utilService: UtilService,\n        public accountService: AccountService,\n        public sanitizer: DomSanitizer\n    ) {\n\n        if (!sharedDataService.dedicatedMode) {\n            this.user = accountService.userValue;\n        }\n\n        this.route.queryParams.subscribe((parameters) => {\n            const inductionContentItemIndex = parameters.inductionContentItemIndex;\n            if (this.sharedDataService.checkInDetail?.checkInInductionItems?.length > inductionContentItemIndex) {\n                this.inductionItem = this.sharedDataService.checkInDetail?.checkInInductionItems[inductionContentItemIndex];\n            }\n        });\n    }\n\n    ngOnInit() {\n    }\n\n\n    onBack() {\n        this.navCtrl.back();\n    }\n\n    onClose() {\n        if (this.sharedDataService.dedicatedMode) {\n            this.navCtrl.navigateRoot('dashboard-dm', {replaceUrl: true});\n        } else {\n            this.navCtrl.navigateBack('/checkinout-confirm', {replaceUrl: true});\n        }\n    }\n\n    onContinue() {\n        let userId;\n        if (this.sharedDataService.dedicatedMode) {\n            userId = this.sharedDataService.dedicatedModeUserDetail.userId;\n        } else {\n            userId = this.user?.userId;\n        }\n        this.sharedDataService.inductionNavigationProcess(userId, this.sharedDataService.inductionContentItemIndex);\n    }\n}\n","export default \"<ion-header>\\n    <app-modal-header *ngIf=\\\"!sharedDataService.dedicatedMode\\\" [modalTitle]=\\\"'Induction'\\\"\\n                      (closeModal)=\\\"onClose()\\\"></app-modal-header>\\n\\n    <app-modal-header-dm *ngIf=\\\"sharedDataService.dedicatedMode\\\"\\n                         [modalTitle]=\\\"sharedDataService.getCurrentCheckedInEntityName()\\\" modalSubTitle=\\\"Check In\\\"\\n                         (closeModal)=\\\"onClose()\\\"></app-modal-header-dm>\\n</ion-header>\\n\\n<ion-content [ngClass]=\\\"{'dedicated-mode':sharedDataService.dedicatedMode}\\\">\\n    <div class=\\\"content-container\\\">\\n        <app-back-continue-toolbar *ngIf=\\\"sharedDataService.dedicatedMode\\\" (back)=\\\"onBack()\\\"\\n                                   (continue)=\\\"onContinue()\\\"></app-back-continue-toolbar>\\n        <div class=\\\"content\\\">\\n            <h6 class=\\\"text-title-1\\\" *ngIf=\\\"!sharedDataService.dedicatedMode\\\">\\n                Rich Text\\n            </h6>\\n\\n            <div class=\\\"text-view\\\" *ngIf=\\\"inductionItem\\\">\\n                <div [innerHTML]=\\\"sanitizer.bypassSecurityTrustHtml(inductionItem.contentDetails)\\\"></div>\\n            </div>\\n\\n        </div>\\n\\n        <ion-footer mode=\\\"ios\\\" *ngIf=\\\"!sharedDataService.dedicatedMode\\\">\\n            <ion-button expand=\\\"full\\\" class=\\\"action-btn\\\" (click)=\\\"onContinue()\\\">Continue</ion-button>\\n        </ion-footer>\\n    </div>\\n\\n</ion-content>\\n\\n\";"]}