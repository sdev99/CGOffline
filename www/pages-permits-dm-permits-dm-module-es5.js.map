{"version":3,"sources":["webpack:///src/app/pages/permits-dm/permits-dm-routing.module.ts","webpack:///src/app/pages/permits-dm/permits-dm.module.ts","webpack:///src/app/pages/permits-dm/permits-dm.page.html","webpack:///src/app/pages/permits-dm/permits-dm.page.ts","webpack:///src/app/pages/permits-dm/permits-dm.page.scss"],"names":["routes","path","component","PermitsDmPageRoutingModule","imports","forChild","exports","PermitsDmPageModule","declarations","PermitsDmPage","navController","filehandlerService","utilService","sharedDataService","apiService","UtilService","EnumService","listType","DedicatedModePermitListType","Live","listTypes","Object","values","searchQuery","isLoadingPermits","dedicatedModeProcessType","DedicatedModeProcessTypes","WorkPermit","getDedicatedModeLiveWorkPermits","getDedicatedModeArchiveWorkPermits","companyID","dedicatedModeDeviceDetailData","subscribe","response","liveWorkPermits","Result","error","archivedWorkPermits","search","visible","event","Archive","item","selector","template"],"mappings":"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","file":"pages-permits-dm-permits-dm-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PermitsDmPage } from './permits-dm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PermitsDmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PermitsDmPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PermitsDmPageRoutingModule } from './permits-dm-routing.module';\n\nimport { PermitsDmPage } from './permits-dm.page';\nimport {ComponentsModule} from '../../components/components.module';\nimport {PipesModule} from '../../pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        PermitsDmPageRoutingModule,\n        ComponentsModule,\n        PipesModule\n    ],\n  declarations: [PermitsDmPage]\n})\nexport class PermitsDmPageModule {}\n","export default \"<ion-header>\\n  <app-dashboard-header-dm\\n    [title]=\\\"sharedDataService.getCurrentCheckedInEntityName()\\\"\\n  ></app-dashboard-header-dm>\\n  <app-topnavigations-btns-dm activeBtn=\\\"permit\\\"></app-topnavigations-btns-dm>\\n  <app-topnavigations-segments-dm\\n    [active]=\\\"listType\\\"\\n    [options]=\\\"listTypes\\\"\\n    [search]=\\\"searchQuery\\\"\\n    (searching)=\\\"onSearch($event)\\\"\\n    (searchbarShowHide)=\\\"searchbarShowHide($event)\\\"\\n    (changed)=\\\"segmentChanged($event)\\\"\\n  ></app-topnavigations-segments-dm>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list\\n    *ngIf=\\\"(listType === EnumService.DedicatedModePermitListType.Live && liveWorkPermits?.length>0) || (listType === EnumService.DedicatedModePermitListType.Archive && archivedWorkPermits?.length>0); else noDocument\\\"\\n    class=\\\"activity-list\\\"\\n    lines=\\\"full\\\"\\n  >\\n    <ng-container\\n      *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Live\\\"\\n    >\\n      <app-archived-item\\n        *ngFor=\\\"let item of liveWorkPermits | listFilter:searchQuery:'formTitle'\\\"\\n        (itemSelect)=\\\"openLiveWorkPermit(item)\\\"\\n        [colFirst]=\\\"item.formTitle\\\"\\n        colSecond=\\\"issued\\\"\\n        [colSecondHighlighted]=\\\"item.formattedIssuedDate\\\"\\n        colThird=\\\"Valid for\\\"\\n        [colThirdHighlighted]=\\\"item.formattedExpiryDate\\\"\\n      ></app-archived-item>\\n    </ng-container>\\n\\n    <ng-container\\n      *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Archive\\\"\\n    >\\n      <app-archived-item\\n        *ngFor=\\\"let item of archivedWorkPermits | listFilter:searchQuery:'formTitle'\\\"\\n        (itemSelect)=\\\"openArchivedWorkPermit(item)\\\"\\n        [colFirst]=\\\"item.formTitle\\\"\\n        colSecond=\\\"issued\\\"\\n        [colSecondHighlighted]=\\\"item.formattedIssuedDate\\\"\\n        colThird=\\\"Valid for\\\"\\n        [colThirdHighlighted]=\\\"item.formattedExpiryDate\\\"\\n      ></app-archived-item>\\n    </ng-container>\\n  </ion-list>\\n\\n  <ng-template #noDocument>\\n    <app-empty-message\\n      *ngIf=\\\"!isLoadingPermits\\\"\\n      message=\\\"No permits available\\\"\\n    ></app-empty-message>\\n  </ng-template>\\n\\n  <ng-container\\n    *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Live && liveWorkPermits?.length>0\\\"\\n  >\\n    <app-empty-message\\n      *ngIf=\\\"!isLoadingPermits && (liveWorkPermits | listFilter:searchQuery:'formTitle').length == 0\\\"\\n      message=\\\"No Results Found\\\"\\n    ></app-empty-message>\\n  </ng-container>\\n\\n  <ng-container\\n    *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Archive && archivedWorkPermits?.length>0\\\"\\n  >\\n    <app-empty-message\\n      *ngIf=\\\"!isLoadingPermits && (archivedWorkPermits | listFilter:searchQuery:'formTitle').length == 0\\\"\\n      message=\\\"No Results Found\\\"\\n    ></app-empty-message>\\n  </ng-container>\\n</ion-content>\\n\";","import { Component, OnInit } from \"@angular/core\";\nimport { FilehandlerService } from \"../../services/filehandler.service\";\nimport { DemoDataService } from \"../../services/demo-data.service\";\nimport { UtilService } from \"../../services/util.service\";\nimport { SharedDataService } from \"../../services/shared-data.service\";\nimport { FormItem } from \"../../_models/formItem\";\nimport { ArchivedDocumentDetail } from \"../../_models/archivedDocumentDetail\";\nimport { Response } from \"../../_models\";\nimport { NavController } from \"@ionic/angular\";\nimport { ApiService } from \"../../services/api.service\";\nimport { EnumService } from \"../../services/enum.service\";\nimport { WorkPermitDetail } from \"../../_models/workPermitDetail\";\n\n@Component({\n  selector: \"app-permits-dm\",\n  templateUrl: \"./permits-dm.page.html\",\n  styleUrls: [\"./permits-dm.page.scss\"],\n})\nexport class PermitsDmPage implements OnInit {\n  UtilService = UtilService;\n  EnumService = EnumService;\n\n  listType = EnumService.DedicatedModePermitListType.Live;\n  listTypes = Object.values(EnumService.DedicatedModePermitListType);\n\n  searchQuery = \"\";\n\n  liveWorkPermits: Array<WorkPermitDetail>;\n  archivedWorkPermits: Array<WorkPermitDetail>;\n\n  isLoadingPermits = false;\n\n  constructor(\n    private navController: NavController,\n    private filehandlerService: FilehandlerService,\n    public utilService: UtilService,\n    public sharedDataService: SharedDataService,\n    public apiService: ApiService\n  ) {}\n\n  ngOnInit() {}\n\n  ionViewDidEnter() {\n    this.sharedDataService.dedicatedModeProcessType =\n      EnumService.DedicatedModeProcessTypes.WorkPermit;\n    this.getDedicatedModeLiveWorkPermits();\n    this.getDedicatedModeArchiveWorkPermits();\n  }\n\n  getDedicatedModeLiveWorkPermits() {\n    this.isLoadingPermits = true;\n    const companyID = this.sharedDataService.dedicatedModeDeviceDetailData\n      ?.companyID;\n    this.apiService.getDedicatedModeLiveWorkPermits(companyID).subscribe(\n      (response: Response) => {\n        this.isLoadingPermits = false;\n        if (response) {\n          this.liveWorkPermits = response.Result;\n        }\n      },\n      (error) => {\n        this.isLoadingPermits = false;\n      }\n    );\n  }\n\n  getDedicatedModeArchiveWorkPermits() {\n    this.isLoadingPermits = true;\n    const companyID = this.sharedDataService.dedicatedModeDeviceDetailData\n      ?.companyID;\n    this.apiService.getDedicatedModeArchiveWorkPermits(companyID).subscribe(\n      (response: Response) => {\n        this.isLoadingPermits = false;\n        if (response) {\n          this.archivedWorkPermits = response.Result;\n        }\n      },\n      (error) => {\n        this.isLoadingPermits = false;\n      }\n    );\n  }\n\n  onSearch(search) {\n    this.searchQuery = search;\n  }\n\n  searchbarShowHide(visible) {\n    if (!visible) {\n      this.searchQuery = \"\";\n    }\n  }\n\n  segmentChanged(event) {\n    this.listType = event;\n    if (event === EnumService.DedicatedModePermitListType.Live) {\n      this.getDedicatedModeLiveWorkPermits();\n    } else if (event === EnumService.DedicatedModePermitListType.Archive) {\n      this.getDedicatedModeArchiveWorkPermits();\n    }\n  }\n\n  openLiveWorkPermit(item: WorkPermitDetail) {}\n\n  openArchivedWorkPermit(item: WorkPermitDetail) {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXJtaXRzLWRtLnBhZ2Uuc2NzcyJ9 */\";"]}