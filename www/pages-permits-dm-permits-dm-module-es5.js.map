{"version":3,"sources":["webpack:///src/app/pages/permits-dm/permits-dm-routing.module.ts","webpack:///src/app/pages/permits-dm/permits-dm.module.ts","webpack:///src/app/pages/permits-dm/permits-dm.page.html","webpack:///src/app/pages/permits-dm/permits-dm.page.ts","webpack:///src/app/pages/permits-dm/permits-dm.page.scss"],"names":["routes","path","component","PermitsDmPageRoutingModule","imports","forChild","exports","PermitsDmPageModule","declarations","PermitsDmPage","navController","filehandlerService","utilService","sharedDataService","apiService","UtilService","EnumService","listType","DedicatedModePermitListType","Live","listTypes","Object","values","searchQuery","dedicatedModeProcessType","DedicatedModeProcessTypes","WorkPermit","getDedicatedModeLiveWorkPermits","getDedicatedModeArchiveWorkPermits","companyID","dedicatedModeDeviceDetailData","subscribe","response","liveWorkPermits","Result","error","archivedWorkPermits","search","visible","event","Archive","item","selector","template"],"mappings":"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","file":"pages-permits-dm-permits-dm-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PermitsDmPage } from './permits-dm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PermitsDmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PermitsDmPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PermitsDmPageRoutingModule } from './permits-dm-routing.module';\n\nimport { PermitsDmPage } from './permits-dm.page';\nimport {ComponentsModule} from '../../components/components.module';\nimport {PipesModule} from '../../pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        PermitsDmPageRoutingModule,\n        ComponentsModule,\n        PipesModule\n    ],\n  declarations: [PermitsDmPage]\n})\nexport class PermitsDmPageModule {}\n","export default \"<ion-header>\\n    <app-dashboard-header-dm [title]=\\\"sharedDataService.getCurrentCheckedInEntityName()\\\"></app-dashboard-header-dm>\\n    <app-topnavigations-btns-dm activeBtn=\\\"permit\\\"></app-topnavigations-btns-dm>\\n    <app-topnavigations-segments-dm [active]=\\\"listType\\\"\\n                                    [options]=\\\"listTypes\\\"\\n                                    [search]=\\\"searchQuery\\\"\\n                                    (searching)=\\\"onSearch($event)\\\"\\n                                    (searchbarShowHide)=\\\"searchbarShowHide($event)\\\"\\n                                    (changed)=\\\"segmentChanged($event)\\\"></app-topnavigations-segments-dm>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list\\n            *ngIf=\\\"(listType === EnumService.DedicatedModePermitListType.Live && liveWorkPermits?.length>0) || (listType === EnumService.DedicatedModePermitListType.Archive && archivedWorkPermits?.length>0); else noDocument\\\"\\n            class=\\\"activity-list\\\"\\n            lines=\\\"full\\\">\\n\\n        <ng-container *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Live\\\">\\n            <app-archived-item\\n                    *ngFor=\\\"let item of liveWorkPermits | listFilter:searchQuery:'formTitle'\\\"\\n                    (itemSelect)=\\\"openLiveWorkPermit(item)\\\"\\n                    [colFirst]=\\\"item.formTitle\\\"\\n                    colSecond=\\\"issued\\\"\\n                    [colSecondHighlighted]=\\\"item.formattedIssuedDate\\\"\\n                    colThird=\\\"Valid for\\\"\\n                    [colThirdHighlighted]=\\\"item.formattedExpiryDate\\\"\\n            ></app-archived-item>\\n        </ng-container>\\n\\n\\n        <ng-container *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Archive\\\">\\n            <app-archived-item\\n                    *ngFor=\\\"let item of archivedWorkPermits | listFilter:searchQuery:'formTitle'\\\"\\n                    (itemSelect)=\\\"openArchivedWorkPermit(item)\\\"\\n                    [colFirst]=\\\"item.formTitle\\\"\\n                    colSecond=\\\"issued\\\"\\n                    [colSecondHighlighted]=\\\"item.formattedIssuedDate\\\"\\n                    colThird=\\\"Valid for\\\"\\n                    [colThirdHighlighted]=\\\"item.formattedExpiryDate\\\"\\n            ></app-archived-item>\\n        </ng-container>\\n\\n    </ion-list>\\n\\n    <ng-template #noDocument>\\n        <app-empty-message message=\\\"No permits available\\\"></app-empty-message>\\n    </ng-template>\\n\\n\\n    <ng-container *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Live && liveWorkPermits?.length>0\\\">\\n\\n        <app-empty-message *ngIf=\\\"(liveWorkPermits | listFilter:searchQuery:'formTitle').length == 0\\\"\\n                           message=\\\"No Results Found\\\"></app-empty-message>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"listType === EnumService.DedicatedModePermitListType.Archive && archivedWorkPermits?.length>0\\\">\\n        <app-empty-message *ngIf=\\\"(archivedWorkPermits | listFilter:searchQuery:'formTitle').length == 0\\\"\\n                           message=\\\"No Results Found\\\"></app-empty-message>\\n    </ng-container>\\n\\n</ion-content>\\n\\n\";","import {Component, OnInit} from '@angular/core';\nimport {FilehandlerService} from '../../services/filehandler.service';\nimport {DemoDataService} from '../../services/demo-data.service';\nimport {UtilService} from '../../services/util.service';\nimport {SharedDataService} from '../../services/shared-data.service';\nimport {FormItem} from '../../_models/formItem';\nimport {ArchivedDocumentDetail} from '../../_models/archivedDocumentDetail';\nimport {Response} from '../../_models';\nimport {NavController} from '@ionic/angular';\nimport {ApiService} from '../../services/api.service';\nimport {EnumService} from '../../services/enum.service';\nimport {WorkPermitDetail} from '../../_models/workPermitDetail';\n\n@Component({\n    selector: 'app-permits-dm',\n    templateUrl: './permits-dm.page.html',\n    styleUrls: ['./permits-dm.page.scss'],\n})\nexport class PermitsDmPage implements OnInit {\n    UtilService = UtilService;\n    EnumService = EnumService;\n\n    listType = EnumService.DedicatedModePermitListType.Live;\n    listTypes = Object.values(EnumService.DedicatedModePermitListType);\n\n    searchQuery = '';\n\n    liveWorkPermits: Array<WorkPermitDetail>;\n    archivedWorkPermits: Array<WorkPermitDetail>;\n\n    constructor(\n        private navController: NavController,\n        private filehandlerService: FilehandlerService,\n        public utilService: UtilService,\n        public sharedDataService: SharedDataService,\n        public apiService: ApiService,\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewDidEnter() {\n        this.sharedDataService.dedicatedModeProcessType = EnumService.DedicatedModeProcessTypes.WorkPermit;\n        this.getDedicatedModeLiveWorkPermits();\n        this.getDedicatedModeArchiveWorkPermits();\n    }\n\n    getDedicatedModeLiveWorkPermits() {\n        const companyID = this.sharedDataService.dedicatedModeDeviceDetailData?.companyID;\n        this.apiService.getDedicatedModeLiveWorkPermits(companyID).subscribe((response: Response) => {\n            if (response) {\n                this.liveWorkPermits = response.Result;\n            }\n        }, (error) => {\n\n        });\n    }\n\n    getDedicatedModeArchiveWorkPermits() {\n        const companyID = this.sharedDataService.dedicatedModeDeviceDetailData?.companyID;\n        this.apiService.getDedicatedModeArchiveWorkPermits(companyID).subscribe((response: Response) => {\n            if (response) {\n                this.archivedWorkPermits = response.Result;\n            }\n        }, (error) => {\n\n        });\n    }\n\n    onSearch(search) {\n        this.searchQuery = search;\n    }\n\n    searchbarShowHide(visible) {\n        if (!visible) {\n            this.searchQuery = '';\n        }\n    }\n\n    segmentChanged(event) {\n        this.listType = event;\n        if (event === EnumService.DedicatedModePermitListType.Live) {\n            this.getDedicatedModeLiveWorkPermits();\n        } else if (event === EnumService.DedicatedModePermitListType.Archive) {\n            this.getDedicatedModeArchiveWorkPermits();\n        }\n    }\n\n    openLiveWorkPermit(item: WorkPermitDetail) {\n    }\n\n    openArchivedWorkPermit(item: WorkPermitDetail) {\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXJtaXRzLWRtLnBhZ2Uuc2NzcyJ9 */\";"]}