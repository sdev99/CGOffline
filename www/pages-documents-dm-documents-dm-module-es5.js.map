{"version":3,"sources":["webpack:///src/app/pages/documents-dm/documents-dm-routing.module.ts","webpack:///src/app/pages/documents-dm/documents-dm.page.ts","webpack:///src/app/pages/documents-dm/documents-dm.page.html","webpack:///src/app/pages/documents-dm/documents-dm.module.ts","webpack:///src/app/pages/documents-dm/documents-dm.page.scss"],"names":["routes","path","component","DocumentsDmPageRoutingModule","imports","forChild","exports","DocumentsDmPage","navController","filehandlerService","utilService","sharedDataService","apiService","UtilService","EnumService","listType","DedicatedModeDocumentListType","Available","listTypes","Object","values","searchQuery","isLoadingDocument","dedicatedModeProcessType","DedicatedModeProcessTypes","Document","getDedicatedModeAvailableDocuments","getDedicatedModeArchiveDocuments","companyID","dedicatedModeDeviceDetailData","subscribe","response","availableDocuments","Result","error","archivedDocuments","search","event","Archive","visible","item","documentFileName","navigateForward","queryParams","documentDetail","JSON","stringify","showAlert","openFile","globalDirectories","documentDirectory","selector","template","DocumentsDmPageModule","declarations"],"mappings":"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","file":"pages-documents-dm-documents-dm-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DocumentsDmPage } from './documents-dm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DocumentsDmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DocumentsDmPageRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { DemoDataService } from \"../../services/demo-data.service\";\nimport { UtilService } from \"../../services/util.service\";\nimport { FilehandlerService } from \"../../services/filehandler.service\";\nimport { NavController } from \"@ionic/angular\";\nimport { SharedDataService } from \"../../services/shared-data.service\";\nimport { ApiService } from \"../../services/api.service\";\nimport { GlobalDirectory } from \"../../_models/globalDirectory\";\nimport { EnumService } from \"../../services/enum.service\";\nimport { Response } from \"../../_models\";\nimport { DocumentDetail } from \"../../_models/documentDetail\";\nimport { ArchivedDocumentDetail } from \"../../_models/archivedDocumentDetail\";\n\n@Component({\n  selector: \"app-documents-dm\",\n  templateUrl: \"./documents-dm.page.html\",\n  styleUrls: [\"./documents-dm.page.scss\"],\n})\nexport class DocumentsDmPage implements OnInit {\n  UtilService = UtilService;\n  EnumService = EnumService;\n\n  listType = EnumService.DedicatedModeDocumentListType.Available;\n  listTypes = Object.values(EnumService.DedicatedModeDocumentListType);\n\n  searchQuery = \"\";\n\n  availableDocuments: Array<DocumentDetail>;\n  archivedDocuments: Array<ArchivedDocumentDetail>;\n\n  isLoadingDocument = false;\n\n  constructor(\n    private navController: NavController,\n    private filehandlerService: FilehandlerService,\n    public utilService: UtilService,\n    public sharedDataService: SharedDataService,\n    public apiService: ApiService\n  ) {}\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    this.sharedDataService.dedicatedModeProcessType =\n      EnumService.DedicatedModeProcessTypes.Document;\n    this.getDedicatedModeAvailableDocuments();\n    this.getDedicatedModeArchiveDocuments();\n  }\n\n  getDedicatedModeAvailableDocuments() {\n    const companyID = this.sharedDataService.dedicatedModeDeviceDetailData\n      ?.companyID;\n    this.isLoadingDocument = true;\n    this.apiService.getDedicatedModeAvailableDocuments(companyID).subscribe(\n      (response: Response) => {\n        this.isLoadingDocument = false;\n        if (response) {\n          this.availableDocuments = response.Result;\n        }\n      },\n      (error) => {\n        this.isLoadingDocument = false;\n      }\n    );\n  }\n\n  getDedicatedModeArchiveDocuments() {\n    this.isLoadingDocument = true;\n    const companyID = this.sharedDataService.dedicatedModeDeviceDetailData\n      ?.companyID;\n    this.apiService.getDedicatedModeArchiveDocuments(companyID).subscribe(\n      (response: Response) => {\n        this.isLoadingDocument = false;\n        if (response) {\n          this.archivedDocuments = response.Result;\n        }\n      },\n      (error) => {\n        this.isLoadingDocument = false;\n      }\n    );\n  }\n\n  onSearch(search) {\n    this.searchQuery = search;\n  }\n\n  segmentChanged(event) {\n    this.listType = event;\n    if (event === EnumService.DedicatedModeDocumentListType.Available) {\n      this.getDedicatedModeAvailableDocuments();\n    } else if (event === EnumService.DedicatedModeDocumentListType.Archive) {\n      this.getDedicatedModeArchiveDocuments();\n    }\n  }\n\n  searchbarShowHide(visible) {\n    if (!visible) {\n      this.searchQuery = \"\";\n    }\n  }\n\n  openAvailableDocument(item: DocumentDetail) {\n    if (item.documentFileName) {\n      this.navController.navigateForward(\"/document-openchoice-dm\", {\n        queryParams: {\n          documentDetail: JSON.stringify(item),\n        },\n      });\n    } else {\n      this.utilService.showAlert(\n        \"This device needs to be synced first in order to show the selected file. Please sync device and try again.\",\n        \"File Not Available Yet\"\n      );\n    }\n  }\n\n  openArchivedDocument(item: ArchivedDocumentDetail) {\n    if (item.documentFileName) {\n      this.filehandlerService.openFile(\n        this.sharedDataService.globalDirectories?.documentDirectory +\n          \"\" +\n          item.documentFileName\n      );\n    } else {\n      this.utilService.showAlert(\n        \"This device needs to be synced first in order to show the selected file. Please sync device and try again.\",\n        \"File Not Available Yet\"\n      );\n    }\n  }\n}\n","export default \"<ion-header>\\n  <app-dashboard-header-dm\\n    [title]=\\\"sharedDataService.getCurrentCheckedInEntityName()\\\"\\n  ></app-dashboard-header-dm>\\n  <app-topnavigations-btns-dm activeBtn=\\\"document\\\"></app-topnavigations-btns-dm>\\n  <app-topnavigations-segments-dm\\n    [active]=\\\"listType\\\"\\n    [options]=\\\"listTypes\\\"\\n    [search]=\\\"searchQuery\\\"\\n    (searching)=\\\"onSearch($event)\\\"\\n    (searchbarShowHide)=\\\"searchbarShowHide($event)\\\"\\n    (changed)=\\\"segmentChanged($event)\\\"\\n  ></app-topnavigations-segments-dm>\\n</ion-header>\\n\\n<ion-content mode=\\\"md\\\">\\n  <ion-list\\n    *ngIf=\\\"(listType === EnumService.DedicatedModeDocumentListType.Available && availableDocuments?.length>0) || (listType === EnumService.DedicatedModeDocumentListType.Archive && archivedDocuments?.length>0); else noDocument\\\"\\n    class=\\\"activity-list\\\"\\n    lines=\\\"full\\\"\\n  >\\n    <ng-container\\n      *ngIf=\\\"listType === EnumService.DedicatedModeDocumentListType.Available\\\"\\n    >\\n      <app-archived-item\\n        *ngFor=\\\"let item of availableDocuments | listFilter:searchQuery:'documentTitle'; last as isLast\\\"\\n        (itemSelect)=\\\"openAvailableDocument(item)\\\"\\n        [icon]=\\\"item.documentFileIconURL\\\"\\n        [colFirst]=\\\"item.documentTitle\\\"\\n        colThird=\\\"Signed\\\"\\n        [colThirdHighlighted]=\\\"item.formattedCreatedDate\\\"\\n      ></app-archived-item>\\n    </ng-container>\\n\\n    <ng-container\\n      *ngIf=\\\"listType === EnumService.DedicatedModeDocumentListType.Archive\\\"\\n    >\\n      <app-archived-item\\n        *ngFor=\\\"let item of archivedDocuments | listFilter:searchQuery:'documentTitle';\\\"\\n        (itemSelect)=\\\"openArchivedDocument(item)\\\"\\n        [icon]=\\\"item.documentFileIconURL\\\"\\n        [colFirst]=\\\"item.documentTitle\\\"\\n        colSecond=\\\"Signed by\\\"\\n        [colSecondHighlighted]=\\\"item.signedByName\\\"\\n        colThird=\\\"Signed\\\"\\n        [colThirdHighlighted]=\\\"item.formattedCreatedDate\\\"\\n      ></app-archived-item>\\n    </ng-container>\\n  </ion-list>\\n\\n  <ng-template #noDocument>\\n    <app-empty-message\\n      *ngIf=\\\"!isLoadingDocument\\\"\\n      message=\\\"No documents available\\\"\\n    ></app-empty-message>\\n  </ng-template>\\n\\n  <ng-container\\n    *ngIf=\\\"listType === EnumService.DedicatedModeDocumentListType.Available && availableDocuments?.length>0\\\"\\n  >\\n    <app-empty-message\\n      *ngIf=\\\"!isLoadingDocument && (availableDocuments | listFilter:searchQuery:'documentTitle').length == 0\\\"\\n      message=\\\"No Results Found\\\"\\n    ></app-empty-message>\\n  </ng-container>\\n\\n  <ng-container\\n    *ngIf=\\\"listType === EnumService.DedicatedModeDocumentListType.Archive && archivedDocuments?.length>0\\\"\\n  >\\n    <app-empty-message\\n      *ngIf=\\\"!isLoadingDocument && (archivedDocuments | listFilter:searchQuery:'documentTitle').length == 0\\\"\\n      message=\\\"No Results Found\\\"\\n    ></app-empty-message>\\n  </ng-container>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DocumentsDmPageRoutingModule } from './documents-dm-routing.module';\n\nimport { DocumentsDmPage } from './documents-dm.page';\nimport {ComponentsModule} from '../../components/components.module';\nimport {PipesModule} from '../../pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        DocumentsDmPageRoutingModule,\n        ComponentsModule,\n        PipesModule\n    ],\n  declarations: [DocumentsDmPage]\n})\nexport class DocumentsDmPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkb2N1bWVudHMtZG0ucGFnZS5zY3NzIn0= */\";"]}