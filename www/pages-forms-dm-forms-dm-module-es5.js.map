{"version":3,"sources":["webpack:///src/app/pages/forms-dm/forms-dm-routing.module.ts","webpack:///src/app/pages/forms-dm/forms-dm.page.scss","webpack:///src/app/pages/forms-dm/forms-dm.module.ts","webpack:///src/app/pages/forms-dm/forms-dm.page.ts","webpack:///src/app/pages/forms-dm/forms-dm.page.html"],"names":["routes","path","component","FormsDmPageRoutingModule","imports","forChild","exports","FormsDmPageModule","declarations","FormsDmPage","navController","filehandlerService","utilService","sharedDataService","apiService","UtilService","EnumService","listType","DedicatedModeFormListType","Available","listTypes","Object","values","searchQuery","dedicatedModeProcessType","DedicatedModeProcessTypes","Form","getDedicatedModeAvailableForms","getDedicatedModeArchiveForms","companyID","dedicatedModeDeviceDetailData","subscribe","response","availableForms","Result","error","archivedForms","search","visible","event","Archive","item","presentLoadingWithOptions","getDedicatedModeSignOffFormDetail","formID","hideLoading","StatusCode","ApiResponseCode","RequestSuccessful","signOffFor","SignOffType","FORMS_DM","viewFormFor","ViewFormForType","FormDM","signOffFormDetail","dedicatedModeTempAuthFor","DedicatedModeTempAuthType","navigateForward","documentFileName","openFile","globalDirectories","documentDirectory","showAlert","selector","template"],"mappings":"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","file":"pages-forms-dm-forms-dm-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormsDmPage } from './forms-dm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormsDmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormsDmPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3Jtcy1kbS5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormsDmPageRoutingModule } from './forms-dm-routing.module';\n\nimport { FormsDmPage } from './forms-dm.page';\nimport {ComponentsModule} from '../../components/components.module';\nimport {PipesModule} from '../../pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FormsDmPageRoutingModule,\n        ComponentsModule,\n        PipesModule\n    ],\n  declarations: [FormsDmPage]\n})\nexport class FormsDmPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FilehandlerService} from '../../services/filehandler.service';\nimport {UtilService} from '../../services/util.service';\nimport {NavController} from '@ionic/angular';\nimport {SharedDataService} from '../../services/shared-data.service';\nimport {EnumService} from '../../services/enum.service';\nimport {ApiService} from '../../services/api.service';\nimport {Response} from '../../_models';\nimport {ArchivedDocumentDetail} from '../../_models/archivedDocumentDetail';\nimport {FormItem} from '../../_models/formItem';\nimport {SignOffFormDetail} from '../../_models/signOffFormDetail';\nimport {SignOffDetailsPostData} from '../../_models/signOffDetailsPostData';\n\n@Component({\n    selector: 'app-forms-dm',\n    templateUrl: './forms-dm.page.html',\n    styleUrls: ['./forms-dm.page.scss'],\n})\nexport class FormsDmPage implements OnInit {\n    UtilService = UtilService;\n    EnumService = EnumService;\n\n    listType = EnumService.DedicatedModeFormListType.Available;\n    listTypes = Object.values(EnumService.DedicatedModeFormListType);\n\n    searchQuery = '';\n\n    availableForms: Array<FormItem>;\n    archivedForms: Array<ArchivedDocumentDetail>;\n\n    constructor(\n        private navController: NavController,\n        private filehandlerService: FilehandlerService,\n        public utilService: UtilService,\n        public sharedDataService: SharedDataService,\n        public apiService: ApiService,\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.sharedDataService.dedicatedModeProcessType = EnumService.DedicatedModeProcessTypes.Form;\n        this.getDedicatedModeAvailableForms();\n        this.getDedicatedModeArchiveForms();\n    }\n\n    getDedicatedModeAvailableForms() {\n        const companyID = this.sharedDataService.dedicatedModeDeviceDetailData?.companyID;\n        this.apiService.getDedicatedModeAvailableForms(companyID).subscribe((response: Response) => {\n            if (response) {\n                this.availableForms = response.Result;\n            }\n        }, (error) => {\n\n        });\n    }\n\n    getDedicatedModeArchiveForms() {\n        const companyID = this.sharedDataService.dedicatedModeDeviceDetailData?.companyID;\n        this.apiService.getDedicatedModeArchiveForms(companyID).subscribe((response: Response) => {\n            if (response) {\n                this.archivedForms = response.Result;\n            }\n        }, (error) => {\n\n        });\n    }\n\n    onSearch(search) {\n        this.searchQuery = search;\n    }\n\n    searchbarShowHide(visible) {\n        if (!visible) {\n            this.searchQuery = '';\n        }\n    }\n\n    segmentChanged(event) {\n        this.listType = event;\n        if (event === EnumService.DedicatedModeFormListType.Available) {\n            this.getDedicatedModeAvailableForms();\n        } else if (event === EnumService.DedicatedModeFormListType.Archive) {\n            this.getDedicatedModeArchiveForms();\n        }\n    }\n\n    openForm(item: FormItem) {\n        this.utilService.presentLoadingWithOptions();\n        this.apiService.getDedicatedModeSignOffFormDetail(item.formID).subscribe((response: Response) => {\n            this.utilService.hideLoading();\n            if (response.StatusCode === EnumService.ApiResponseCode.RequestSuccessful) {\n                this.sharedDataService.signOffFor = EnumService.SignOffType.FORMS_DM;\n                this.sharedDataService.viewFormFor = EnumService.ViewFormForType.FormDM;\n                this.sharedDataService.signOffFormDetail = response.Result as SignOffFormDetail;\n                this.sharedDataService.dedicatedModeTempAuthFor = EnumService.DedicatedModeTempAuthType.Form;\n                this.navController.navigateForward('/form-open-auth-dm');\n            }\n        }, error => {\n            this.utilService.hideLoading();\n        });\n    }\n\n    openArchivedForm(item: ArchivedDocumentDetail) {\n        if (item.documentFileName) {\n            this.filehandlerService.openFile(this.sharedDataService.globalDirectories?.documentDirectory + '' + item.documentFileName);\n        } else {\n            this.utilService.showAlert('This device needs to be synced first in order to show the selected file. Please sync device and try again.', 'File Not Available Yet');\n        }\n    }\n\n}\n","export default \"<ion-header>\\n    <app-dashboard-header-dm [title]=\\\"sharedDataService.getCurrentCheckedInEntityName()\\\"></app-dashboard-header-dm>\\n    <app-topnavigations-btns-dm activeBtn=\\\"form\\\"></app-topnavigations-btns-dm>\\n    <app-topnavigations-segments-dm [active]=\\\"listType\\\"\\n                                    [options]=\\\"listTypes\\\"\\n                                    [search]=\\\"searchQuery\\\"\\n                                    (searching)=\\\"onSearch($event)\\\"\\n                                    (searchbarShowHide)=\\\"searchbarShowHide($event)\\\"\\n                                    (changed)=\\\"segmentChanged($event)\\\"></app-topnavigations-segments-dm>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list\\n            *ngIf=\\\"(listType === EnumService.DedicatedModeFormListType.Available && availableForms?.length>0) || (listType === EnumService.DedicatedModeFormListType.Archive && archivedForms?.length>0); else noDocument\\\"\\n            class=\\\"activity-list\\\"\\n            lines=\\\"full\\\">\\n\\n\\n        <ng-container *ngIf=\\\"listType === EnumService.DedicatedModeFormListType.Available\\\">\\n            <app-archived-item\\n                    *ngFor=\\\"let item of availableForms | listFilter:searchQuery:'formTitle';\\\"\\n                    [icon]=\\\"item.documentFileIconURL\\\"\\n                    (itemSelect)=\\\"openForm(item)\\\"\\n                    [colFirst]=\\\"item.formTitle\\\"\\n            ></app-archived-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"listType === EnumService.DedicatedModeFormListType.Archive\\\">\\n            <app-archived-item\\n                    *ngFor=\\\"let item of archivedForms | listFilter:searchQuery:'documentTitle';\\\"\\n                    (itemSelect)=\\\"openArchivedForm(item)\\\"\\n                    [icon]=\\\"item.documentFileIconURL\\\"\\n                    [colFirst]=\\\"item.documentTitle\\\"\\n                    colSecond=\\\"Signed by\\\"\\n                    [colSecondHighlighted]=\\\"item.signedByName\\\"\\n                    colThird=\\\"Signed\\\"\\n                    [colThirdHighlighted]=\\\"item.formattedCreatedDate\\\"\\n            ></app-archived-item>\\n        </ng-container>\\n    </ion-list>\\n\\n    <ng-template #noDocument>\\n        <app-empty-message message=\\\"No forms available\\\"></app-empty-message>\\n    </ng-template>\\n\\n\\n    <ng-container *ngIf=\\\"listType === EnumService.DedicatedModeFormListType.Available && availableForms?.length>0\\\">\\n\\n        <app-empty-message *ngIf=\\\"(availableForms | listFilter:searchQuery:'formTitle').length == 0\\\"\\n                           message=\\\"No Results Found\\\"></app-empty-message>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"listType === EnumService.DedicatedModeFormListType.Archive && archivedForms?.length>0\\\">\\n        <app-empty-message *ngIf=\\\"(archivedForms | listFilter:searchQuery:'documentTitle').length == 0\\\"\\n                           message=\\\"No Results Found\\\"></app-empty-message>\\n    </ng-container>\\n</ion-content>\\n\";"]}